{"version":3,"file":"static/js/952.9672656c.chunk.js","mappings":"+IAEA,MAsCA,EAtCsBA,KACpBC,EAAAA,EAAAA,YAAU,KACRD,EAAKE,SAAQ,CAACC,EAAKC,KACjB,GAAID,EAAK,CACP,MAAME,EAAUF,EACVG,EAAQD,EAAQE,YAAYC,OAAOC,MAAM,KAC/CJ,EAAQE,YAAc,GAEtBD,EAAMJ,SAAQ,CAACQ,EAAMC,KACnB,MAAMC,EAAWC,SAASC,cAAc,QACxCF,EAASG,UAAS,OAAAC,OAAUL,EAAY,GACxCC,EAASK,MAAMC,QAAU,eAEzBR,EAAKD,MAAM,IAAIP,SAAQ,CAACiB,EAAQC,KAC9B,MAAMC,EAAgBR,SAASC,cAAc,QAC7CO,EAAcN,UAAS,OAAAC,OAAUI,EAAc,GAC/CC,EAAcJ,MAAMC,QAAU,eAE9B,MAAMI,EAAgBT,SAASC,cAAc,QAC7CQ,EAAcP,UAAS,OAAAC,OAAUI,EAAc,GAC/CE,EAAcf,YAAcY,EAC5BG,EAAcL,MAAMC,QAAU,eAE9BG,EAAcE,YAAYD,GAC1BV,EAASW,YAAYF,EAAc,IAGrChB,EAAQkB,YAAYX,GACpBP,EAAQkB,YAAYV,SAASW,eAAe,KAAK,GAKrD,IACA,GACD,CAACxB,GAAM,E,cCjCZ,MA+CA,EA/CqByB,KACnB,MAAMC,GAAcC,EAAAA,EAAAA,QAAO,KAE3B1B,EAAAA,EAAAA,YAAU,KACRyB,EAAYE,QAAQ1B,SAAQC,IACtBA,IACFA,EAAIc,MAAMY,QAAU,EACtB,GACA,GACD,IAEHC,EAAaJ,EAAYE,SAEzB,MAAMG,EAAW5B,IACXA,IAAQuB,EAAYE,QAAQI,SAAS7B,IACvCuB,EAAYE,QAAQK,KAAK9B,EAC3B,EAGF,OACE+B,EAAAA,EAAAA,KAAA,WAASnB,UAAU,UAASoB,UAC1BD,EAAAA,EAAAA,KAAA,OAAKnB,UAAU,uCAAsCoB,UACnDC,EAAAA,EAAAA,MAAA,OAAKrB,UAAU,YAAWoB,SAAA,EAC1BD,EAAAA,EAAAA,KAAA,MAAInB,UAAU,cAAcE,MAAO,CAEvBoB,cAAe,MACfC,MAAM,WAENH,SAAC,yBACXC,EAAAA,EAAAA,MAAA,OAAKrB,UAAU,aAAawB,GAAG,aAAYJ,SAAA,EAEzCD,EAAAA,EAAAA,KAAA,MAAI/B,IAAK4B,EAAQI,SAAC,8BAClBD,EAAAA,EAAAA,KAAA,MAAI/B,IAAK4B,EAAQI,SAAC,qBAClBD,EAAAA,EAAAA,KAAA,MAAI/B,IAAK4B,EAAQI,SAAC,+BAClBD,EAAAA,EAAAA,KAAA,MAAI/B,IAAK4B,EAAQI,SAAC,mBAClBD,EAAAA,EAAAA,KAAA,MAAI/B,IAAK4B,EAAQI,SAAC,iBAClBD,EAAAA,EAAAA,KAAA,MAAI/B,IAAK4B,EAAQI,SAAC,2BAClBD,EAAAA,EAAAA,KAAA,MAAI/B,IAAK4B,EAAQI,SAAC,qBAClBD,EAAAA,EAAAA,KAAA,MAAI/B,IAAK4B,EAAQI,SAAC,sDAKhB,C","sources":["useLettering.jsx","TextEmbedded.jsx"],"sourcesContent":["import { useEffect } from \"react\";\r\n\r\nconst useLettering = (refs) => {\r\n  useEffect(() => {\r\n    refs.forEach((ref, index) => {\r\n      if (ref) {\r\n        const element = ref;\r\n        const words = element.textContent.trim().split(\" \");\r\n        element.textContent = \"\";\r\n\r\n        words.forEach((word, wordIndex) => {\r\n          const wordSpan = document.createElement(\"span\");\r\n          wordSpan.className = `word${wordIndex + 1}`;\r\n          wordSpan.style.display = 'inline-block';\r\n\r\n          word.split(\"\").forEach((letter, letterIndex) => {\r\n            const outerCharSpan = document.createElement(\"span\");\r\n            outerCharSpan.className = `char${letterIndex + 1}`;\r\n            outerCharSpan.style.display = 'inline-block';\r\n\r\n            const innerCharSpan = document.createElement(\"span\");\r\n            innerCharSpan.className = `char${letterIndex + 1}`;\r\n            innerCharSpan.textContent = letter;\r\n            innerCharSpan.style.display = 'inline-block';\r\n\r\n            outerCharSpan.appendChild(innerCharSpan);\r\n            wordSpan.appendChild(outerCharSpan);\r\n          });\r\n\r\n          element.appendChild(wordSpan);\r\n          element.appendChild(document.createTextNode(\" \")); // Preserve spaces between words\r\n        });\r\n\r\n        // Apply animation to the spans\r\n       \r\n      }\r\n    });\r\n  }, [refs]);\r\n};\r\n\r\nexport default useLettering;\r\n","import React, { useRef, useEffect } from \"react\";\r\nimport useLettering from \"./useLettering\";\r\nimport \"./TextEmbedded.css\";\r\n\r\nconst TextEmbedded = () => {\r\n  const phrasesRefs = useRef([]);\r\n\r\n  useEffect(() => {\r\n    phrasesRefs.current.forEach(ref => {\r\n      if (ref) {\r\n        ref.style.opacity = 1; // Ensure h2 elements are visible\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  useLettering(phrasesRefs.current);\r\n\r\n  const setRefs = (ref) => {\r\n    if (ref && !phrasesRefs.current.includes(ref)) {\r\n      phrasesRefs.current.push(ref);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <section className=\"wrapper\">\r\n      <div className=\"container-fluid pt-md-8 pt-8 pt-md-0\">\r\n        <div className=\"container\">\r\n        <h4 className=\"text-center\" style={{\r\n                    \r\n                    letterSpacing: \"1em\",\r\n                    color:'#1268b3'\r\n                   \r\n                  }}>CONTACT WITH US FOR</h4>\r\n          <div className=\"os-phrases\" id=\"os-phrases\">\r\n         \r\n            <h2 ref={setRefs}>Performance Optimization</h2>\r\n            <h2 ref={setRefs}>Cost Efficiency</h2>\r\n            <h2 ref={setRefs}>Reliability and Stability</h2>\r\n            <h2 ref={setRefs}>Customization</h2>\r\n            <h2 ref={setRefs}>Scalability</h2>\r\n            <h2 ref={setRefs}>Competitive Advantage</h2>\r\n            <h2 ref={setRefs}>User Experience</h2>\r\n            <h2 ref={setRefs}>Expertise Innovation Quality Reliability</h2>\r\n           \r\n          </div>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default TextEmbedded;\r\n"],"names":["refs","useEffect","forEach","ref","index","element","words","textContent","trim","split","word","wordIndex","wordSpan","document","createElement","className","concat","style","display","letter","letterIndex","outerCharSpan","innerCharSpan","appendChild","createTextNode","TextEmbedded","phrasesRefs","useRef","current","opacity","useLettering","setRefs","includes","push","_jsx","children","_jsxs","letterSpacing","color","id"],"sourceRoot":""}